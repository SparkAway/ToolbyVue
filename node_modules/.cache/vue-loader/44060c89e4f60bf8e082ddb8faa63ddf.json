{"remainingRequest":"D:\\HB\\Vue面试项目\\toolbyVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HB\\Vue面试项目\\toolbyVue\\src\\views\\tool\\Counter.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HB\\Vue面试项目\\toolbyVue\\src\\views\\tool\\Counter.vue","mtime":1647324258585},{"path":"D:\\HB\\Vue面试项目\\toolbyVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638879652431},{"path":"D:\\HB\\Vue面试项目\\toolbyVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1638879657737},{"path":"D:\\HB\\Vue面试项目\\toolbyVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638879652431},{"path":"D:\\HB\\Vue面试项目\\toolbyVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1638879655935}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQge21hcFN0YXRlfSBmcm9tICd2dWV4JzsNCmV4cG9ydCBkZWZhdWx0IHsNCg0KICBuYW1lOiAnQ291bnRlcicsDQogIGRhdGEoKXsNCiAgICByZXR1cm4gew0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczp7DQogICAgaGFuZGxlSW5wdXRGdW5jKGluZGV4KXsNCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaGFuZGxlSW5wdXRGdW5jJyxpbmRleCk7DQogICAgfSwNCiAgICBoYW5kbGVEb0Z1bmMoc2lnKXsNCiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnaGFuZGxlRG9GdW5jJyxzaWcpOw0KICAgIH0sDQogICAgc2hvd1Jlc3VsdCgpew0KICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3Nob3dSZXN1bHQnKTsNCiAgICB9LA0KICAgIGNsZWFyKCl7DQogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2NsZWFyJyk7DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDp7DQogICAgLi4ubWFwU3RhdGUoWydudW1iZXJMaXN0JywnbnVtYmVyXzEnLCdudW1iZXJfMicsJ3NpZ24nXSkNCiAgfQ0KfQ0K"},{"version":3,"sources":["Counter.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Counter.vue","sourceRoot":"src/views/tool","sourcesContent":["<template>\r\n    <div class=\"counter\">\r\n        <div class=\"showPlace\" style=\"text-align: center\">{{number_1}}&nbsp;{{sign}}&nbsp;{{number_2}}</div>\r\n        <ul class=\"doBox\">\r\n          <li><button @click=\"handleDoFunc('+')\">+</button></li>\r\n          <li><button @click=\"handleDoFunc('-')\">-</button></li>\r\n          <li><button @click=\"handleDoFunc('*')\">*</button></li>\r\n          <li><button @click=\"handleDoFunc('/')\">/</button></li>\r\n          <li><button @click=\"showResult\">=</button></li>\r\n          <li><button @click=\"clear\">C</button></li>\r\n        </ul>\r\n        <ul class=\"numberBox\">\r\n          <li v-for=\"(item,i) in numberList\" @click=\"handleInputFunc(i)\"><button>{{item}}</button></li>\r\n        </ul>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapState} from 'vuex';\r\nexport default {\r\n\r\n  name: 'Counter',\r\n  data(){\r\n    return {\r\n    }\r\n  },\r\n  methods:{\r\n    handleInputFunc(index){\r\n      this.$store.commit('handleInputFunc',index);\r\n    },\r\n    handleDoFunc(sig){\r\n      this.$store.commit('handleDoFunc',sig);\r\n    },\r\n    showResult(){\r\n     this.$store.commit('showResult');\r\n    },\r\n    clear(){\r\n      this.$store.commit('clear');\r\n    }\r\n  },\r\n  computed:{\r\n    ...mapState(['numberList','number_1','number_2','sign'])\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.counter{\r\n  border: 3px solid black ;\r\n  background-image: linear-gradient(#e66465, #9198e5,#EE82EE);\r\n  font-family: Fantasy;\r\n  margin: 100px auto;\r\n  height: 400px;\r\n  width: 400px;\r\n  background-color: gray;\r\n  padding: 20px;\r\n}\r\n.showPlace{\r\n  overflow: hidden;\r\n  font-size: 30px;\r\n  line-height: 60px;\r\n  background-color: rgb(222, 225, 230);\r\n  height: 60px;\r\n  width: 340px;\r\n  margin: auto;\r\n}\r\n ul{\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   list-style: none;\r\n }\r\n .numberBox button{\r\n   border-radius: 10px;\r\n   height: 40px;\r\n   width: 40px;\r\n   margin: 20px;\r\n }\r\n .numberBox button:hover{\r\n   background-color: turquoise;\r\n }\r\n .doBox button{\r\n    height: 35px;\r\n   width: 35px;\r\n   margin:10px;\r\n   border-radius: 50%;\r\n   border: 1px solid black;\r\n   font-size: 30px;\r\n   line-height: 30px;\r\n }\r\n .doBox button:hover{\r\n   background-color: turquoise;\r\n }\r\n</style>\r\n"]}]}